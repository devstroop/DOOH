// <auto-generated />
using System;
using DOOH.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DOOH.Server.Migrations
{
    [DbContext(typeof(DOOHDBContext))]
    partial class DOOHDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Adboard", b =>
                {
                    b.Property<int>("AdboardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdboardId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BaseRatePerSecond")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int?>("DisplayId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("Latitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<double>("Longitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<int?>("MotherboardId")
                        .HasColumnType("int");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("SignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("AdboardId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DisplayId");

                    b.HasIndex("MotherboardId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Adboard", "dbo", t =>
                        {
                            t.HasTrigger("Adboard_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.AdboardImage", b =>
                {
                    b.Property<int>("AdboardImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdboardImageId"));

                    b.Property<int>("AdboardId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdboardImageId");

                    b.HasIndex("AdboardId");

                    b.ToTable("AdboardImage", "dbo", t =>
                        {
                            t.HasTrigger("AdboardImage_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.AdboardNetwork", b =>
                {
                    b.Property<int>("AdboardId")
                        .HasColumnType("int");

                    b.Property<string>("DNS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gateway")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subnet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdboardId");

                    b.ToTable("AdboardNetwork", "dbo", t =>
                        {
                            t.HasTrigger("AdboardNetwork_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.AdboardStatus", b =>
                {
                    b.Property<int>("AdboardId")
                        .HasColumnType("int");

                    b.Property<bool>("Connected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ConnectedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("Delay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10000))");

                    b.HasKey("AdboardId");

                    b.ToTable("AdboardStatus", "dbo", t =>
                        {
                            t.HasTrigger("AdboardStatus_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.AdboardWifi", b =>
                {
                    b.Property<int>("AdboardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConnectedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<bool?>("HasConnected")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("AdboardId");

                    b.ToTable("AdboardWifi", "dbo", t =>
                        {
                            t.HasTrigger("AdboardWifi_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Advertisement", b =>
                {
                    b.Property<int>("AdvertisementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdvertisementId"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UploadKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime");

                    b.HasKey("AdvertisementId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("UploadKey");

                    b.ToTable("Advertisement", "dbo", t =>
                        {
                            t.HasTrigger("Advertisement_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Analytic", b =>
                {
                    b.Property<int>("AnalyticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnalyticId"));

                    b.Property<int>("AdboardId")
                        .HasColumnType("int");

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StoppedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int?>("TotalAttention")
                        .HasColumnType("int");

                    b.Property<int?>("UniqueAttention")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("AnalyticId");

                    b.HasIndex("AdboardId");

                    b.HasIndex("AdvertisementId");

                    b.ToTable("Analytic", "dbo", t =>
                        {
                            t.HasTrigger("Analytic_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Billing", b =>
                {
                    b.Property<int>("BillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillingId"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<int>("AnalyticId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Payable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RatePerSecond")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RoundOff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Taxable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TotalDuration")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillingId");

                    b.HasIndex("AnalyticId");

                    b.ToTable("Billing", "dbo", t =>
                        {
                            t.HasTrigger("Billing_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brand", "dbo", t =>
                        {
                            t.HasTrigger("Brand_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignId"));

                    b.Property<decimal>("Budget")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("BudgetType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CampaignName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CampaignId");

                    b.ToTable("Campaign", "dbo", t =>
                        {
                            t.HasTrigger("Campaign_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.CampaignAdboard", b =>
                {
                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("AdboardId")
                        .HasColumnType("int");

                    b.HasKey("CampaignId", "AdboardId");

                    b.HasIndex("AdboardId");

                    b.ToTable("CampaignAdboard", "dbo", t =>
                        {
                            t.HasTrigger("CampaignAdboard_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.CampaignCriterion", b =>
                {
                    b.Property<int>("CampaignCriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignCriteriaId"));

                    b.Property<long?>("MaxAdboardPerCampaign")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxPlaytimePerDay")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxRotationPerDay")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinAdboardPerCampaign")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinPlaytimePerDay")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinRotationPerDay")
                        .HasColumnType("bigint");

                    b.HasKey("CampaignCriteriaId");

                    b.ToTable("CampaignCriteria", "dbo", t =>
                        {
                            t.HasTrigger("CampaignCriteria_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Commission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0.00))");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", "dbo", t =>
                        {
                            t.HasTrigger("Category_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Company", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSTIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slogan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Company", "dbo", t =>
                        {
                            t.HasTrigger("Company_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Display", b =>
                {
                    b.Property<int>("DisplayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisplayId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PixelHeight")
                        .HasColumnType("int");

                    b.Property<int?>("PixelWidth")
                        .HasColumnType("int");

                    b.Property<double?>("ScreenHeight")
                        .HasColumnType("float");

                    b.Property<double?>("ScreenWidth")
                        .HasColumnType("float");

                    b.HasKey("DisplayId");

                    b.HasIndex("BrandId");

                    b.ToTable("Display", "dbo", t =>
                        {
                            t.HasTrigger("Display_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Earning", b =>
                {
                    b.Property<int>("EarningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EarningId"));

                    b.Property<int>("AdboardId")
                        .HasColumnType("int");

                    b.Property<int>("AnalyticId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EarningAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EarningPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RatePerSecond")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalAmountBeforeTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("EarningId");

                    b.HasIndex("AdboardId");

                    b.HasIndex("AnalyticId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Earning", "dbo", t =>
                        {
                            t.HasTrigger("Earning_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Faq", b =>
                {
                    b.Property<int>("FaqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaqId"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("FaqId");

                    b.ToTable("Faq", "dbo", t =>
                        {
                            t.HasTrigger("Faq_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Motherboard", b =>
                {
                    b.Property<int>("MotherboardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MotherboardId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Cpu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MotherboardId");

                    b.HasIndex("BrandId");

                    b.ToTable("Motherboard", "dbo", t =>
                        {
                            t.HasTrigger("Motherboard_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Page", b =>
                {
                    b.Property<string>("Slag")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Slag");

                    b.ToTable("Page", "dbo", t =>
                        {
                            t.HasTrigger("Page_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderId");

                    b.ToTable("Provider", "dbo", t =>
                        {
                            t.HasTrigger("Provider_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rotation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ScheduleId");

                    b.HasIndex("CampaignId");

                    b.ToTable("Schedule", "dbo", t =>
                        {
                            t.HasTrigger("Schedule_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.ScheduleAdboard", b =>
                {
                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("AdboardId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId", "AdboardId");

                    b.HasIndex("AdboardId");

                    b.ToTable("ScheduleAdboard", "dbo", t =>
                        {
                            t.HasTrigger("ScheduleAdboard_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Tax", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxId"));

                    b.Property<int?>("ParentTaxId")
                        .HasColumnType("int");

                    b.Property<string>("TaxName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0.00))");

                    b.HasKey("TaxId");

                    b.HasIndex("ParentTaxId");

                    b.ToTable("Tax", "dbo", t =>
                        {
                            t.HasTrigger("Tax_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Upload", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AspectRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BitRate")
                        .HasColumnType("int");

                    b.Property<string>("CodecName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<double?>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrameRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.HasKey("Key");

                    b.HasIndex("Owner");

                    b.ToTable("Upload", "dbo", t =>
                        {
                            t.HasTrigger("Upload_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.UserInformation", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<bool?>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SuspendedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("UserId");

                    b.ToTable("UserInformation", "dbo", t =>
                        {
                            t.HasTrigger("UserInformation_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Adboard", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Category", "Category")
                        .WithMany("Adboards")
                        .HasForeignKey("CategoryId");

                    b.HasOne("DOOH.Server.Models.DOOHDB.Display", "Display")
                        .WithMany("Adboards")
                        .HasForeignKey("DisplayId");

                    b.HasOne("DOOH.Server.Models.DOOHDB.Motherboard", "Motherboard")
                        .WithMany("Adboards")
                        .HasForeignKey("MotherboardId");

                    b.HasOne("DOOH.Server.Models.DOOHDB.Provider", "Provider")
                        .WithMany("Adboards")
                        .HasForeignKey("ProviderId");

                    b.Navigation("Category");

                    b.Navigation("Display");

                    b.Navigation("Motherboard");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.AdboardImage", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Adboard", "Adboard")
                        .WithMany("AdboardImages")
                        .HasForeignKey("AdboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adboard");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.AdboardNetwork", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Adboard", "Adboard")
                        .WithMany("AdboardNetworks")
                        .HasForeignKey("AdboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adboard");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.AdboardStatus", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Adboard", "Adboard")
                        .WithMany("AdboardStatuses")
                        .HasForeignKey("AdboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adboard");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.AdboardWifi", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Adboard", "Adboard")
                        .WithMany("AdboardWifis")
                        .HasForeignKey("AdboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adboard");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Advertisement", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Campaign", "Campaign")
                        .WithMany("Advertisements")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOOH.Server.Models.DOOHDB.Upload", "Upload")
                        .WithMany("Advertisements")
                        .HasForeignKey("UploadKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Upload");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Analytic", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Adboard", "Adboard")
                        .WithMany("Analytics")
                        .HasForeignKey("AdboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOOH.Server.Models.DOOHDB.Advertisement", "Advertisement")
                        .WithMany("Analytics")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adboard");

                    b.Navigation("Advertisement");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Billing", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Analytic", "Analytic")
                        .WithMany("Billings")
                        .HasForeignKey("AnalyticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Analytic");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.CampaignAdboard", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Adboard", "Adboard")
                        .WithMany("CampaignAdboards")
                        .HasForeignKey("AdboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOOH.Server.Models.DOOHDB.Campaign", "Campaign")
                        .WithMany("CampaignAdboards")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adboard");

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Display", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Brand", "Brand")
                        .WithMany("Displays")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Earning", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Adboard", "Adboard")
                        .WithMany("Earnings")
                        .HasForeignKey("AdboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOOH.Server.Models.DOOHDB.Analytic", "Analytic")
                        .WithMany("Earnings")
                        .HasForeignKey("AnalyticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOOH.Server.Models.DOOHDB.Provider", "Provider")
                        .WithMany("Earnings")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adboard");

                    b.Navigation("Analytic");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Motherboard", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Brand", "Brand")
                        .WithMany("Motherboards")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Schedule", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Campaign", "Campaign")
                        .WithMany("Schedules")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.ScheduleAdboard", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Adboard", "Adboard")
                        .WithMany("ScheduleAdboards")
                        .HasForeignKey("AdboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOOH.Server.Models.DOOHDB.Schedule", "Schedule")
                        .WithMany("ScheduleAdboards")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adboard");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Tax", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.Tax", "Tax1")
                        .WithMany("Taxes1")
                        .HasForeignKey("ParentTaxId");

                    b.Navigation("Tax1");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Upload", b =>
                {
                    b.HasOne("DOOH.Server.Models.DOOHDB.UserInformation", "UserInformation")
                        .WithMany("Uploads")
                        .HasForeignKey("Owner");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Adboard", b =>
                {
                    b.Navigation("AdboardImages");

                    b.Navigation("AdboardNetworks");

                    b.Navigation("AdboardStatuses");

                    b.Navigation("AdboardWifis");

                    b.Navigation("Analytics");

                    b.Navigation("CampaignAdboards");

                    b.Navigation("Earnings");

                    b.Navigation("ScheduleAdboards");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Advertisement", b =>
                {
                    b.Navigation("Analytics");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Analytic", b =>
                {
                    b.Navigation("Billings");

                    b.Navigation("Earnings");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Brand", b =>
                {
                    b.Navigation("Displays");

                    b.Navigation("Motherboards");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Campaign", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("CampaignAdboards");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Category", b =>
                {
                    b.Navigation("Adboards");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Display", b =>
                {
                    b.Navigation("Adboards");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Motherboard", b =>
                {
                    b.Navigation("Adboards");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Provider", b =>
                {
                    b.Navigation("Adboards");

                    b.Navigation("Earnings");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Schedule", b =>
                {
                    b.Navigation("ScheduleAdboards");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Tax", b =>
                {
                    b.Navigation("Taxes1");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.Upload", b =>
                {
                    b.Navigation("Advertisements");
                });

            modelBuilder.Entity("DOOH.Server.Models.DOOHDB.UserInformation", b =>
                {
                    b.Navigation("Uploads");
                });
#pragma warning restore 612, 618
        }
    }
}
